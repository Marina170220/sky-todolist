version: '3.8'

services:
  db:
    image: postgres:12.4-alpine
    container_name: todolist
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: td_user
      POSTGRES_PASSWORD: td_paSS81
      POSTGRES_DB: todolist
      POSTGRES_INITDB_ARGS: "-A md5"
    restart: always
    ports:
    - "5432:5432"

volumes:
  postgres_data:


version: '3.9'
services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "8080:80"
    depends_on:
      - api
  api:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.docker_env:/app/.env
  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.docker_env:/app/.env
    command: python manage.py migrate
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: td_paSS81
      POSTGRES_DB: todolist
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
volumes:
  postgres_data:
  front: